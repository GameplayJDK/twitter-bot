# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
  app.twitter.consumer_api_key:       '%env(TWITTER_CONSUMER_API_KEY)%'
  app.twitter.consumer_api_secret:    '%env(TWITTER_CONSUMER_API_SECRET)%'
  app.twitter.access_token:           '%env(TWITTER_ACCESS_TOKEN)%'
  app.twitter.access_token_secret:    '%env(TWITTER_ACCESS_TOKEN_SECRET)%'
  app.google_cloud.key_file_path:     '%env(GOOGLE_CLOUD_KEY_FILE_PATH)%'

services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: '../src/*'
    exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

  # controllers are imported separately to make sure services can be injected
  # as action arguments even if you don't extend any base controller class
  App\Controller\:
    resource: '../src/Controller'
    tags: ['controller.service_arguments']

  # add more service definitions when explicit configuration is needed
  # please note that last definitions always *replace* previous ones

  App\Model\Configuration:
    arguments:
      - '%app.twitter.consumer_api_key%'
      - '%app.twitter.consumer_api_secret%'
      - '%app.twitter.access_token%'
      - '%app.twitter.access_token_secret%'
      - '%app.google_cloud.key_file_path%'

  App\DependencyInjection\Factory\CodebirdFactory: ~

  App\DependencyInjection\Factory\LanguageClientFactory: ~

  Codebird\Codebird:
    factory: '@App\DependencyInjection\Factory\CodebirdFactory'

  Google\Cloud\Language\LanguageClient:
    factory: '@App\DependencyInjection\Factory\LanguageClientFactory'

  App\Service\Emoji\EmojiProviderUnicode:
    arguments:
      - '%kernel.project_dir%/var/cache/unicode/emoji-data.txt'

  App\Service\Emoji\EmojiProviderTwemoji:
    arguments:
      - '%kernel.project_dir%/var/cache/twemoji/assets/svg'

  App\Service\Emoji\EmojiProviderInterface: '@App\Service\Emoji\EmojiProviderTwemoji'
